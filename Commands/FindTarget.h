// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.


#ifndef FINDTARGET_H
#define FINDTARGET_H


#include "Commands/Subsystem.h"
#include "../Robot.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class FindTarget: public Command {
public:
	FindTarget();
	virtual void Initialize();
	virtual void Execute();
	virtual bool IsFinished();
	virtual void End();
	virtual void Interrupted();

	bool foundTarget(){return m_Hot;};

	private:
	    
	    struct Scores {
	        double rectangularity;
	        double aspectRatioVertical;
	        double aspectRatioHorizontal;
	    };

	    struct TargetReport {
	        int verticalIndex;
	        int horizontalIndex;
	        bool Hot;
	        double totalScore;
	        double leftScore;
	        double rightScore;
	        double tapeWidthScore;
	        double verticalScore;
	    };
	    
	    bool m_Hot;

	    double scoreRectangularity(ParticleAnalysisReport *report);
	    bool scoreCompare(Scores scores, bool vertical);
	    double ratioToScore(double ratio);
	    bool hotOrNot(TargetReport target);
	    double computeDistance (BinaryImage *image, ParticleAnalysisReport *report);
	    double scoreAspectRatio(BinaryImage *image, ParticleAnalysisReport *report, bool vertical);	
};

#endif
