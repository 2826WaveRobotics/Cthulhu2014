// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "DashboardUpdater.h"
#include "../Robotmap.h"
#include "../Commands/DashboardUpdateCommand.h"
//static SEM_ID s_dashboardSemaphore;
DashboardUpdater::DashboardUpdater() : Subsystem("DashboardUpdater")/*,dashboard(s_dashboardSemaphore)*/ {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}
    
void DashboardUpdater::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	//SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	SetDefaultCommand(new DashboardUpdateCommand());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}
// Put methods for controlling this subsystem
// here. Call these from Commands.
void DashboardUpdater::sendUpdate()
{
    Dashboard &d = DriverStation::GetInstance()->GetLowPriorityDashboardPacker();
    d.AddCluster();
    {
        d.AddFloat(Robot::compressorSubSystem->getTankPSI());
    }
    d.FinalizeCluster();
    d.Finalize();
    //TODO: Look up how to finialize and and send the information out to the dashboard 
}
