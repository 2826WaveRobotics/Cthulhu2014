// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
SpeedController* RobotMap::armPitchWithPIDPitchMotor = NULL;
AnalogChannel* RobotMap::armPitchWithPIDPitchAngleSensor = NULL;
AnalogChannel* RobotMap::armPitchWithPIDPitchAngleSensorInverted = NULL;
Solenoid* RobotMap::clawClaw = NULL;
Solenoid* RobotMap::clawFang = NULL;
Solenoid* RobotMap::clawTusk = NULL;
SpeedController* RobotMap::ballCollectorRollerMotor = NULL;
DigitalInput* RobotMap::ballCollectorCatchBallSensor = NULL;
DigitalInput* RobotMap::ballCollectorGroundBallSensor = NULL;
Solenoid* RobotMap::ballCollectorSensorPower = NULL;
Compressor* RobotMap::compressorSubSystemCompressor = NULL;
AnalogChannel* RobotMap::compressorSubSystemTankPressure = NULL;
Encoder* RobotMap::driveWithPIDDriveEncoder = NULL;
SpeedController* RobotMap::driveWithPIDLeftFront = NULL;
SpeedController* RobotMap::driveWithPIDRightFront = NULL;
RobotDrive* RobotMap::driveWithPIDTankDrive2Motor = NULL;
Solenoid* RobotMap::driveWithPIDDriveShift = NULL;
SpeedController* RobotMap::driveWithPIDLeftDrive3 = NULL;
SpeedController* RobotMap::driveWithPIDRightDrive3 = NULL;
SpeedController* RobotMap::shooterWinchMotor = NULL;
DigitalInput* RobotMap::shooterBrandingIronSensor = NULL;
Solenoid* RobotMap::shooterWinchPin = NULL;
AnalogChannel* RobotMap::turretWithPIDTurretAngleSensor = NULL;
AnalogChannel* RobotMap::turretWithPIDTurretAngleSensorInverted = NULL;
SpeedController* RobotMap::turretWithPIDTurretMotor = NULL;
DigitalOutput* RobotMap::lightsLight1 = NULL;
DigitalOutput* RobotMap::lightsLight2 = NULL;
DigitalOutput* RobotMap::lightsLight4 = NULL;
DigitalOutput* RobotMap::lightsLight8 = NULL;
Solenoid* RobotMap::driveWithPIDDropDownCaster = NULL;
void RobotMap::init() {
	armPitchWithPIDPitchMotor = new Talon(1, 5);	
	armPitchWithPIDPitchAngleSensor = new AnalogChannel(1, 4);
	armPitchWithPIDPitchAngleSensorInverted = new AnalogChannel(1, 5);
	clawClaw = new Solenoid(1, 2);
	clawFang = new Solenoid(1, 3);
	clawTusk = new Solenoid(1, 4);
	ballCollectorRollerMotor = new Talon(1, 4);
	ballCollectorCatchBallSensor = new DigitalInput(1, 4);
	ballCollectorGroundBallSensor = new DigitalInput(1, 6);
	ballCollectorSensorPower = new Solenoid(1, 8);
	compressorSubSystemCompressor = new Compressor(1, 3, 1, 1);
	compressorSubSystemTankPressure = new AnalogChannel(1, 6);
	driveWithPIDDriveEncoder = new Encoder(1, 1, 1, 2, false, Encoder::k4X);
	driveWithPIDDriveEncoder->SetDistancePerPulse(1.0);
	driveWithPIDDriveEncoder->SetPIDSourceParameter(Encoder::kRate);
	driveWithPIDDriveEncoder->Start();
	driveWithPIDLeftFront = new Talon(1, 1);
	driveWithPIDRightFront = new Talon(1, 2);
	driveWithPIDTankDrive2Motor = new RobotDrive(driveWithPIDLeftFront, driveWithPIDRightFront);
	driveWithPIDTankDrive2Motor->SetSafetyEnabled(true);
	driveWithPIDTankDrive2Motor->SetExpiration(0.1);
	driveWithPIDTankDrive2Motor->SetSensitivity(0.5);
	driveWithPIDTankDrive2Motor->SetMaxOutput(1.0);
	driveWithPIDDriveShift = new Solenoid(1, 1);
	driveWithPIDLeftDrive3 = new Talon(1, 9);
	driveWithPIDRightDrive3 = new Talon(1, 8);
	shooterWinchMotor = new Talon(1, 6);
	shooterBrandingIronSensor = new DigitalInput(1, 5);
	shooterWinchPin = new Solenoid(1, 5);
	turretWithPIDTurretAngleSensor = new AnalogChannel(1, 2);
	turretWithPIDTurretAngleSensorInverted = new AnalogChannel(1, 3);
	turretWithPIDTurretMotor = new Talon(1, 7);
	lightsLight1 = new DigitalOutput(12);
	lightsLight2 = new DigitalOutput(13);
	lightsLight4 = new DigitalOutput(14);
	lightsLight8 = new DigitalOutput(11); // not used currently PREMILWAUKEE
	driveWithPIDDropDownCaster = new Solenoid(6);

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
