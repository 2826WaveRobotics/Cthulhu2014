// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#ifndef ARMPITCHWITHPID_H
#define ARMPITCHWITHPID_H
#include "Commands/PIDSubsystem.h"
#include "WPILib.h"
/**
 *
 *
 * @author ExampleAuthor
 */
class ArmPitchWithPID: public PIDSubsystem {
 public:
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	SpeedController* pitchMotor;
	AnalogChannel* pitchAngleSensor;
	AnalogChannel* pitchAngleSensorInverted;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	ArmPitchWithPID();
	double ReturnPIDInput();
	void UsePIDOutput(double output);
	void InitDefaultCommand();
	
	double getPIDOutput();
    void setAbsoluteAngle(double angle);
    double convertAngleToVolts(double angle, bool inverted); // inverted goes from 4.5 to .5
    double convertVoltsToAngle(double volts, bool inverted);
    double getCurrentAngle();
    bool isAngleValid();
    void setPitchMotorOutput(double output);
    void setPitchMotorAngle(double degrees);
    
 private:
    double m_requestedAngle;
    double m_actualAngle;
    bool m_angleInputValid;
};
#endif
