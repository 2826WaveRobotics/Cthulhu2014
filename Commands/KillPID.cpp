#include "KillPID.h"
KillPID::KillPID() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::armPitchWithPID);
	Requires(Robot::turretWithPID);
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// Called just before this Command runs the first time
void KillPID::Initialize() {
	if(Robot::oi->getDriverJoystick()->GetRawButton(7))
	{
		Robot::armPitchWithPID->Disable(); // arm should correct and re-enable after every setAngle
		Robot::turretWithPID->Disable();
	}
}
// Called repeatedly when this Command is scheduled to run
void KillPID::Execute() {

}
// Make this return true when this Command no longer needs to run execute()
bool KillPID::IsFinished() {
	return true;
}
// Called once after isFinished returns true
void KillPID::End() {

}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void KillPID::Interrupted() {
}
