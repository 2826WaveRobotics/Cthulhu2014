// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.



#include "AutoMode_DoubleBallFront_DriveForward.h"

#include "DriveStraightByTime.h"
#include "../WaveConstants.h"
#include "WaveWait.h"
#include "Fire.h"
#include "SetSpecificAngle.h"
#include "SetPositionGround.h"
#include "WatchForGroundBall.h"
#include "ClawOpen.h"
#include "FangOpen.h"
#include "WinchPin.h"
#include "WaveWait.h"
#include "AutoWinch.h"
#include "TuskClose.h"
#include "TuskOpen.h"
#include "FangClose.h"
#include "RunCollector.h"
#include "KillPID.h"


AutoMode_DoubleBallFront_DriveForward::AutoMode_DoubleBallFront_DriveForward() {
	AddParallel(new KillPID()); // ghost turret problem
	
//	double volts = Robot::oi->getArduino2()->GetRawAxis(3);
//	double angle = (volts*volts*volts*volts*-63.346) - (volts*volts*volts*155.05) - (volts*volts*143.7) - (239.56*volts) + 27.764;
//	angle += 15;
//	angle /= 215;
//	angle *= 95; // good god i hope this works
//	if(angle < 0)
//		angle = 0;
//	else if(angle > 95) 
//		angle = 95;
//	else
//		angle = 45 ;

	//AddSequential(new SetSpecificAngle(angle));
	AddSequential(new SetSpecificAngle(33)); // 36 original // 38
	AddSequential(new WaveWait(0.25));

	//Fire
	AddSequential(new ClawOpen());
	AddSequential(new TuskClose());
	AddSequential(new FangOpen());

	AddSequential(new WaveWait(.1));

	AddSequential(new WinchPin(c_releasePin)); // release the firing pin
	AddSequential(new WaveWait(.15));
	AddSequential(new WinchPin(c_setPin)); // reset the firing pin
	AddSequential(new AutoWinch()); // pull the winch back again and prepare to fire again

	//Pick up second Ball
	AddSequential(new TuskOpen());
	AddSequential(new FangClose());
	AddSequential(new SetPositionGround());
	//    AddParallel(new SetPositionGround());
	//    AddSequential(new WaveWait(1.5));
	//AddParallel(new KillPID());
	AddParallel(new RunCollector());
	AddParallel(new WatchForGroundBall());
	AddSequential(new DriveStraightByTime(1.0, 0.70));
	
	//AddParallel(new RunCollector());
	//    AddSequential(new WaveWait(1));
	AddSequential(new SetSpecificAngle(32.0));//39// 41
	//    AddParallel(new SetSpecificAngle(37.0));//39// 41
	//AddSequential (new WaveWait(.8));
	//AddParallel(new KillPID());
	//
	//    AddSequential(new WaveWait(.5));
	//AddSequential(new SetSpecificAngle((arduino2->GetRawAxis(1)+1)*45));
	AddSequential(new ClawOpen());
	AddSequential(new FangOpen());
	AddSequential(new TuskClose());
	//    AddSequential(new WaveWait(.25));
	AddSequential(new WinchPin(c_releasePin)); // release the firing pin
	AddSequential(new WaveWait(0.15)); // wait for firing to occur before resetting pin
	AddSequential(new WinchPin(c_setPin)); // reset the firing pin

	AddParallel(new DriveStraightByTime(.7, .75));
	AddSequential(new AutoWinch()); // pull the winch back again and prepare to fire again
}
